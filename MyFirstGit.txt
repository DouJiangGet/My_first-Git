git 操作
pwd  -->显示当前终端会话
ls   -->显示当前目录下的所有文件
cd   --> ..上一级目录  . --> 当前目录  目录名 -->下一级目录
git version   -->当前版本
git config --global user.name "Dou Jiang" -->设置名称
git config --global user.email "1834836595@qq.com" -->设置邮箱
git init -->初始化
git add 文件名-->把文件加进git版本控制系统中  暂时保存
git add . -->把当前目录的全部文件加进git版本控制系统中  暂时保存

git commit -->把临时提交的文件提交成一个固定版本  进入vim 后 输入i 进入编辑模式 输出提交说明 按esc 在输出英文的:wq
git commit -m "说明 " -->提交说明的简化版 跳过vim
git commit -m "fix(text):change content" -->规范以下提交说明 fix 修复（那个文件） 改变内容
 
git log -->查看提交信息 commit d62052b84a4be61a369d65e33a2d514147679954 提交唯一id 

<<<<<<< HEAD
git reset --hard (commit d62052b84a4be61a369d65e33a2d514147679954) 回退版本 重置为版本 没有后边的版本了

git branch 0.2 -->创建0.2分支
git branch 0.3 -->创建0.3分支
git branch 0.4 -->创建0.3分支
git branch -a -->查看所有分支 

git merge 0.2 -->合并0.2分支
这是0.2的代码 测试一个合并的效果

多人合作的时候版本分支很重要
text



github

git branch -M main ->创建一个main 分支 并把分支切换到main
git remote add origin https://github.com/DouJiangGet/First-Commit.git -->添加一个远程仓库地址
git push -u origin main -->推送到github



参加开源项目

git clone https://github.com/DouJiangGet/re01.git -->克隆地址

git remove -v --> 可以看到只有自己的代码

git remote add upstream https://github.com/midorg-com/re01.git //添加开源项目的地址

git remove -v --> 查看是否改变成功

git checkout branch 'name' -->创建分支并切换到分支

修改文件后 
git add .
git commit -m ""
git push -u origin name

